/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DevLoaderUiRouteImport } from './routes/dev/loader-ui'
import { Route as DevApiRouteImport } from './routes/dev/api'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DevLoaderUiRoute = DevLoaderUiRouteImport.update({
  id: '/dev/loader-ui',
  path: '/dev/loader-ui',
  getParentRoute: () => rootRouteImport,
} as any)
const DevApiRoute = DevApiRouteImport.update({
  id: '/dev/api',
  path: '/dev/api',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dev/api': typeof DevApiRoute
  '/dev/loader-ui': typeof DevLoaderUiRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dev/api': typeof DevApiRoute
  '/dev/loader-ui': typeof DevLoaderUiRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/dev/api': typeof DevApiRoute
  '/dev/loader-ui': typeof DevLoaderUiRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/signin'
    | '/auth/signup'
    | '/dev/api'
    | '/dev/loader-ui'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/signin' | '/auth/signup' | '/dev/api' | '/dev/loader-ui'
  id:
    | '__root__'
    | '/'
    | '/auth/signin'
    | '/auth/signup'
    | '/dev/api'
    | '/dev/loader-ui'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  DevApiRoute: typeof DevApiRoute
  DevLoaderUiRoute: typeof DevLoaderUiRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev/api': {
      id: '/dev/api'
      path: '/dev/api'
      fullPath: '/dev/api'
      preLoaderRoute: typeof DevApiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dev/loader-ui': {
      id: '/dev/loader-ui'
      path: '/dev/loader-ui'
      fullPath: '/dev/loader-ui'
      preLoaderRoute: typeof DevLoaderUiRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  DevApiRoute: DevApiRoute,
  DevLoaderUiRoute: DevLoaderUiRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
